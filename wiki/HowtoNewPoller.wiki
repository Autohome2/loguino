#summary How to write a new poller

=Poller howto=

Pollers are responsible for querying attached devices for data to log.  This would typically involve communicating with attached hardware, creating one or more message objects and sending them to the logging system.

The poller is triggered periodically by the application, it is the responsibility of the poller to control how often hardware is queried, however pollers must be non blocking, if there is no new data, hardware is not ready, or it has been too soon since data was last collected, then the poller must return immediately.

=Implementing a poller=

A poller consists of a poller class, this class has two mandatory static methods, these are: begin(), and poll().

At application start up, the begin() method is called.  The begin method is responsible for conditioning the environment so that dats may be gathered in the future.  Such actions would include opening any communications sessions, authenticating, and reading in any configuration information required.

At this stage no log messaged must be sent.

Once setup is complete for all pollers, the application enters an infinite loop.  Each time the loop iterates, The poll() method is called on the class.  The poll() method is responsible for querying the device and creating log messages, log messages contain information about what was logged, and the value.  Pollers may create multiple log messages.

<wiki:comment>
Add message page, and make sure message links accordingly.
</wiki:comment>

For each log message created, the poller must call logger::log() to send the message.

=Activating a poller=

Once the poller class has been created, it must be activated, this is done by modifying the poller class in arduino so that the appropriate method calls are made()