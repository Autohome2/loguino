#summary How to test the hardware and install the correct firmware
<wiki:toc max_depth="2" />

Once your hardware is built, you must flash it with the latest firmware, to do so, you will need a compute with a USB port, and a USB cable to connect up your loguino board.  In this tutorial, [http://www.nongnu.org/avrdude/ avrdude] is used, other options include [http://smileymicros.com/blog/2010/10/11/ardup-an-arduino-hex-file-uploader/ ardup] which may be easier for windows users.  I chose avrdude however as it is bundled with [http://www.arduino.cc Arduino] and as such should be available on all systems.

= Downloading = 

Download the latest version of Loguino from the [http://code.google.com/p/loguino/downloads/list Download] section.  Unpack the archive, in the root of the directory, there is a file called loguino.hex, this is the firmware for loguino itself.  There is also a directory called tests, this directory contains all tests required to check loguino is working at the hardware level.

= Uploading = 

To upload a firmware image, you must know which serial port it is connected to, on Mac os, first plug in your loguino to your computer, then search for the correct serial port by opening terminal and listing the contents of /dev/:

{{{
sputnik:~ irvined$ ls -1 /dev/tty.*
/dev/tty.Bluetooth-Modem
/dev/tty.Bluetooth-PDA-Sync
/dev/tty.Miphone-WirelessiAP-1
/dev/tty.usbmodem3d11
sputnik:~ irvined$ 
}}}

In this case, loguino is connected to /dev/tty.usbmodem3d11 

Now you are ready to actually upload the firmware, firmware comes in .hex files which are part of the loguino package.  The command to upload the hex file is:

{{{
/Applications/Arduino.app/Contents/Resources/Java/hardware/tools/avr/bin/avrdude -V -F -c stk500v2 -b 115200 -p atmega2560  -C /Applications/Arduino.app/Contents/Resources/Java/hardware/tools/avr/etc/avrdude.conf -P [SERIALDEV] -U flash:w:[FIRMWARE.HEX]
}}}


Where [SERIALDEV] changed to the path of your device (dev/tty.usbmodem3d11 in the case above) and [FIRMWARE.HEX] is the hex file to upload.

= Testing = 

The following tests can be used to debug the hardware and make sure everything is working from the comfort of your sofa.  Each test outputs data to the serial line at 115200BAUD, you can use the serial monitor provided with the arduino software if you do not have a preferred terminal client.

== SD Card ==

The SD Card test is based upon the test code by Limor Fried provided with arduino.  It prints out information about the SD card including a listing of the files.  Use this to make sure that the loguino is able to access the SD card.  

First place an SD card into the reader on the loguino. Next change into the tests directory, and upload the firmware file called sd_info.hex.

{{{
/Applications/Arduino.app/Contents/Resources/Java/hardware/tools/avr/bin/avrdude -V -F -c stk500v2 -b 115200 -p atmega2560  -C /Applications/Arduino.app/Contents/Resources/Java/hardware/tools/avr/etc/avrdude.conf -P [SERIALDEV] -U flash:w:sd_info.hex
}}}

You will see some information printed by avrdude as it uploads the image, if all goes well it should look something like this:

{{{
sputnik:sd_info irvined$ /Applications/Arduino.app/Contents/Resources/Java/hardware/tools/avr/bin/avrdude -V -F -c stk500v2 -b 115200 -p atmega2560 -P /dev/tty.usbmodem3d11 -U flash:w:sd_info.hex -C /Applications/Arduino.app/Contents/Resources/Java/hardware/tools/avr/etc/avrdude.conf

avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.01s

avrdude: Device signature = 0x1e9801
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: reading input file "sd_info.hex"
avrdude: input file sd_info.hex auto detected as Intel Hex
avrdude: writing flash (13750 bytes):

Writing | ################################################## | 100% 1.99s

avrdude: 13750 bytes of flash written

avrdude: safemode: Fuses OK

avrdude done.  Thank you.

sputnik:sd_info irvined$ 
}}}

Next, open arduino and select the serial monitor, make sure that the speed selected is 115200.  You should see some output similar to this:

{{{
Initializing SD card...Wiring is correct and a card is present.

Card type: SD2

Volume type is FAT16

Volume size (bytes): 2002452480
Volume size (Kbytes): 1955520
Volume size (Mbytes): 1909

Files found on the card (name, date and size in bytes): 
00000000.LOG  2000-01-01 01:00:00 176
00000001.LOG  2000-01-01 01:00:00 102523
00000002.LOG  2000-01-01 01:00:00 30
00000003.LOG  2000-01-01 01:00:00 0
00000004.LOG  2000-01-01 01:00:00 0
00000005.LOG  2000-01-01 01:00:00 0
00000006.LOG  2000-01-01 01:00:00 0
00000007.LOG  2000-01-01 01:00:00 0
00000008.LOG  2000-01-01 01:00:00 176
00000009.LOG  2000-01-01 01:00:00 1856
00000010.LOG  2000-01-01 01:00:00 73
00000011.LOG  2000-01-01 01:00:00 7203
00000012.LOG  2000-01-01 01:00:00 91
00000013.LOG  2000-01-01 01:00:00 228
00000014.LOG  2000-01-01 01:00:00 0
00000015.LOG  2000-01-01 01:00:00 205877
00000016.LOG  2000-01-01 01:00:00 1226
00000017.LOG  2000-01-01 01:00:00 215454

}}}

== GPS ==

The GPS test queries the GPS for NMEA data and can be used to confirm that loguino is receiving data from the GPS, and the format is correct.  Flash the hardware with the gps.hex file.

{{{
/Applications/Arduino.app/Contents/Resources/Java/hardware/tools/avr/bin/avrdude -V -F -c stk500v2 -b 115200 -p atmega2560 -P /dev/tty.usbmodem3d11 -U flash:w:gps.hex -C /Applications/Arduino.app/Contents/Resources/Java/hardware/tools/avr/etc/avrdude.conf
}}}

avrdude will flash the loguino with the GPS test, you should see output similar to this:

{{{

sputnik:gps irvined$ /Applications/Arduino.app/Contents/Resources/Java/hardware/tools/avr/bin/avrdude -V -F -c stk500v2 -b 115200 -p atmega2560 -P /dev/tty.usbmodem3d11 -U flash:w:gps.hex -C /Applications/Arduino.app/Contents/Resources/Java/hardware/tools/avr/etc/avrdude.conf

avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.01s

avrdude: Device signature = 0x1e9801
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: reading input file "gps.hex"
avrdude: input file gps.hex auto detected as Intel Hex
avrdude: writing flash (10166 bytes):

Writing | ################################################## | 100% 1.47s

avrdude: 10166 bytes of flash written

avrdude: safemode: Fuses OK

avrdude done.  Thank you.

sputnik:gps irvined$ 

}}}

Once it has flashed succesfully, open arduino, and use the serial monitor to view the output.  The speed used is 115200.  The output should look something like:

{{{
getTime() 205511.000
getLatitude() 5205.9563N
getLongitude() 00508.0047E
getSpeed() 0.73
getCourse() 217.80
getDate() 300611
getTime() 205512.000
getLatitude() 5205.9560N
getLongitude() 00508.0043E
getSpeed() 0.90
getCourse() 215.87
getDate() 300611
}}}

If there is no output, then the GPS is not sending data to the loguino.

= Installing Loguino = 

Once you have tested the various components (Or, if you're feeling lucky) you can then install the loguino.hex file to your loguino device.  Flash the hardware using avrdude:

{{{
sputnik:loguino irvined$ /Applications/Arduino.app/Contents/Resources/Java/hardware/tools/avr/bin/avrdude -V -F -c stk500v2 -b 115200 -p atmega2560 -P /dev/tty.usbmodem3d11 -U flash:w:loguino.hex -C /Applications/Arduino.app/Contents/Resources/Java/hardware/tools/avr/etc/avrdude.conf

avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.01s

avrdude: Device signature = 0x1e9801
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: reading input file "loguino.hex"
avrdude: input file loguino.hex auto detected as Intel Hex
avrdude: writing flash (34004 bytes):

Writing | ################################################## | 100% 4.91s

avrdude: 34004 bytes of flash written

avrdude: safemode: Fuses OK

avrdude done.  Thank you.
sputnik:loguino irvined$ 
}}}

Once flashed, you can open the serial monitor in arduino, you should see some output: 

{{{
28470,GPS.Longitude,00508.0144E,Longitude,
28470,GPS.Date,030711,Date,
28470,GPS.Time,124320.000,Time,
29451,GPS.Course,199.16,Degrees,
29451,GPS.Speed,0.22,Knots,
29451,GPS.Latitude,5205.9547N,Latitude,
29451,GPS.Longitude,00508.0143E,Longitude,
29451,GPS.Date,030711,Date,
29451,GPS.Time,124321.000,Time,
}}}

If you do, then your ready to install loguino in your vehicle and start logging.



 